import streamlit as st
import cv2
import numpy as np
from PIL import Image
from ultralytics import YOLO

# Load m√¥ h√¨nh YOLO ƒë√£ train
MODEL_PATH = "yolo11n.pt"
model = YOLO(MODEL_PATH)

def main():
    st.title("üíä Nh·∫≠n di·ªán & Ph√¢n lo·∫°i Thu·ªëc b·∫±ng YOLOv11")
    st.write("Vui l√≤ng upload ·∫£nh ch·ª©a vi√™n thu·ªëc ƒë·ªÉ nh·∫≠n di·ªán.")

    # Upload ·∫£nh
    uploaded_file = st.file_uploader("Ch·ªçn ·∫£nh", type=["jpg", "jpeg", "png"])

    if uploaded_file is not None:
        image = Image.open(uploaded_file)
        st.image(image, caption="·∫¢nh ƒë√£ t·∫£i l√™n", use_column_width=True)

        # Chuy·ªÉn ·∫£nh sang OpenCV
        img_np = np.array(image)
        img_bgr = cv2.cvtColor(img_np, cv2.COLOR_RGB2BGR)

        # Ch·∫°y m√¥ h√¨nh YOLO
        results = model.predict(img_bgr)

        # Hi·ªÉn th·ªã k·∫øt qu·∫£ nh·∫≠n di·ªán
        for result in results:
            img_result = result.plot()
            st.image(img_result, caption="K·∫øt qu·∫£ nh·∫≠n di·ªán", use_column_width=True)

            st.write("**Danh s√°ch thu·ªëc nh·∫≠n di·ªán:**")
            for box in result.boxes:
                cls = int(box.cls[0])
                conf = box.conf[0]
                st.write(f"- **{model.names[cls]}** (ƒê·ªô ch√≠nh x√°c: {conf:.2f})")

if __name__ == "__main__":
    main()

